# Python program to translate
# speech to text and text to speech


import speech_recognition as sr
import pyttsx3
import os


# Initialize the recognizer
r = sr.Recognizer()

# Function to convert text to
# speech


def SpeakText(command):

    # Initialize the engine
    engine = pyttsx3.init()
    engine.say(command)
    engine.runAndWait()


# Loop infinitely for user to
# speak
pyttsx3.speak("Hi I'm Lucky, Welcome to my windows tools")
print("Write exit or quit, whenever the job is done", end='\n')
while True:
    # Exception handling to handle
    # exceptions at the runtime
    print("Say .....")
    try:
        # use the microphone as source for input.
        with sr.Microphone() as source2:
            # wait for a second to let the recognizer
            # adjust the energy threshold based on
            # the surrounding noise level
            r.adjust_for_ambient_noise(source2, duration=0.3)
        # listens for the user's input
            audio2 = r.listen(source2)
        # Using ggogle to recognize audio
            MyText = "Press 'a' to say again or type what you want to open"
            MyText = r.recognize_google(audio2)

            print(MyText)
            SpeakText(MyText)
    except sr.RequestError as e:
        print("Could not request results; {0}".format(e))
    except sr.UnknownValueError:
        print("unknown error occured")
    print("Tell me what should I run for you : ", end='')

    q = MyText
    p = q.lower()
    
    if ("lucky" in p):
       
    # print(p)
    
        if (" not " in p) or ("don't" in p) or ("do not" in p):
            print("Plz not include words like not, don't and do not")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("chrome" in p) or ("browser" in p) or ("google" in p)):
            os.system("chrome")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("notepad" in p) or ("editor" in p)):
            os.system("notepad")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("calculator" in p) or ("calculate" in p) or ("calculation" in p)):
            os.system("calc")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ((("check" in p) and ("disk" in p)) or ("chkdsk" in p)):
            os.system("chkdsk")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("control panel" in p):
            os.system("control")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p) or ("set" in p)) and (("date and time properties" in p) or ("date" in p) or ("time" in p)):
            os.system("timedate.cpl")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("disk" in p) and ("partition" in p) or ("diskpart" in p)):
            os.system("diskpart")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("documents" in p) or ("document" in p)):
            os.system("explorer Documents")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("play" in p)) and ("player" in p):
            os.system("dvdplay")
        elif (("change" in p) or ("launch" in p) or ("open" in p) or ("close" in p)) and ("firewall" in p):
            os.system("firewall.cpl")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("folders properties" in p):
            os.system("control folders")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("change" in p)) and ("keyboard" in p) and ("properties" in p):
            os.system("control keyboard")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("paint" in p):
            os.system("mspaint")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("mouse properties" in p):
            os.system("control mouse")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("excel" in p):
            os.system("Excel")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("powerpoint" in p) or ("power point" in p)):
            os.system("powerpnt")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("ms word" in p) or ("msword" in p) or ("microsoft word" in p)):
            os.system("winword")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("on screen" in p) and ("keyboard" in p):
            os.system("osk")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("resource monitor" in p):
            os.system("resmon")
        elif (("run" in p) or ("launch" in p) or ("do" in p) or ("execute" in p)) and (("shut down" in p) or ("turn off" in p)):
            os.system("shutdown")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("sound recorder" in p) or (("record" in p) and ("sound" in p))):
            os.system("soundrecorder")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("sound" in p) and ("volume" in p):
            os.system("sndvol")
        elif (("show" in p) or ("launch" in p) or ("open" in p) or ("display" in p)) and ("system information" in p):
            os.system("msinfo32")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("show" in p)) and (("task manager" in p) or ("taskmgr" in p)):
            os.system("taskmgr")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("explorer" in p):
            os.system("explorer.exe")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and ("windows update" in p):
            os.system("wuapp")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("check" in p)) and ("windows" in p) and ("version" in p):
            os.system("winver")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("wordpad" in p) or ("word pad" in p)):
            os.system("write")
        elif (("edit" in p) or ("see" in p) or ("open" in p) or ("check" in p)) and (("environment variables" in p) or ("environmental variables" in p) or ("environment variable" in p) or ("environmental variable" in p)):
            os.system("SystemPropertiesAdvanced")
        elif (("run" in p) or ("launch" in p) or ("open" in p)) and (("downloads" in p) or ("download" in p)):
            os.system("explorer Downloads")
        elif (("run" in p) or ("launch" in p) or ("open" in p) or ("execute" in p)) and (("virtualbox" in p) or ("virtual box" in p)):
            os.system("VirtualBox")
        elif ("exit" in p) or ("quit" in p):
            print("Terminating.....")
            break
        else:
            pyttsx3.speak("Wrong input")
            print('dont support')

    else :
        pyttsx3.speak("Say \"Quit\" or \"Exit\" to terminate")
        if ("exit" in p) or ("quit" in p):
            print("Terminating.....")
            break
